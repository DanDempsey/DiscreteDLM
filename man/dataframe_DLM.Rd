% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe_DLM.R
\name{dataframe_DLM}
\alias{dataframe_DLM}
\title{Creating a Lagged Dataframe}
\usage{
dataframe_DLM(X, lag, df, dynamic_vars = NULL, scale = TRUE, ...)
}
\arguments{
\item{X}{A dataframe.}

\item{lag}{Lag length. See the help file for the "crossbasis" function from the dlnm package.}

\item{df}{Degrees of freedom for the b-splines function. See the bs documentation.}

\item{dynamic_vars}{The names of the columns that should be lagged. If not supplied, the dataset is not altered in any way.}

\item{scale}{Logical indicating if the user wishes the column of the lagged columns should be scaled to have zero mean and unit variance.}

\item{...}{Further arguments to be passed into the crossbasis function.}
}
\value{
A dataframe where the listed dynamic variables have been appropriately lagged. If no dynamic variables are given, the input dataframe is returned unaltered.
}
\description{
Transforms a dataframe by lagging dynamic variables (using b-splines), to prepare it for distributed lag modelling. This is essentially a convenience function for quickly creating a dataframe that can be used for distributed lag modelling. This function interpolates the lag window of the dynamic variables using b-splines to create the cross-basis matrix; using the crossbasis function directly gives the user more flexibility.
}
\examples{
X <- dplyr::select( dlnm::chicagoNMMAPS, c('cvd', 'dow', 'temp', 'dptp', 'o3') )
X <- na.omit( X )
X_lagged <- dataframe_DLM( X, lag = 40, df = 7, dynamic_vars =  c('temp', 'dptp', 'o3') )
head( X_lagged )
}
\author{
Daniel Dempsey (\href{mailto:dempsed6@tcd.ie}{dempsed6@tcd.ie})
}
